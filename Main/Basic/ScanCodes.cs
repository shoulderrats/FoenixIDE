using System.Windows.Forms;

namespace FoenixIDE.Basic
{
    public enum ScanCode
    {
        sc_null = 0x00,
        sc_escape = 0x01,
        sc_1 = 0x02,
        sc_2 = 0x03,
        sc_3 = 0x04,
        sc_4 = 0x05,
        sc_5 = 0x06,
        sc_6 = 0x07,
        sc_7 = 0x08,
        sc_8 = 0x09,
        sc_9 = 0x0A,
        sc_0 = 0x0B,
        sc_minus = 0x0C,
        sc_equals = 0x0D,
        sc_backspace = 0x0E,
        sc_tab = 0x0F,
        sc_q = 0x10,
        sc_w = 0x11,
        sc_e = 0x12,
        sc_r = 0x13,
        sc_t = 0x14,
        sc_y = 0x15,
        sc_u = 0x16,
        sc_i = 0x17,
        sc_o = 0x18,
        sc_p = 0x19,
        sc_bracketLeft = 0x1A,
        sc_bracketRight = 0x1B,
        sc_enter = 0x1C,
        sc_controlLeft = 0x1D,
        sc_a = 0x1E,
        sc_s = 0x1F,
        sc_d = 0x20,
        sc_f = 0x21,
        sc_g = 0x22,
        sc_h = 0x23,
        sc_j = 0x24,
        sc_k = 0x25,
        sc_l = 0x26,
        sc_semicolon = 0x27,
        sc_apostrophe = 0x28,
        sc_grave = 0x29,
        sc_shiftLeft = 0x2A,
        sc_backslash = 0x2B,
        sc_z = 0x2C,
        sc_x = 0x2D,
        sc_c = 0x2E,
        sc_v = 0x2F,
        sc_b = 0x30,
        sc_n = 0x31,
        sc_m = 0x32,
        sc_comma = 0x33,
        sc_period = 0x34,
        sc_slash = 0x35,
        sc_shiftRight = 0x36,
        sc_numpad_multiply = 0x37,
        sc_altLeft = 0x38,
        sc_space = 0x39,
        sc_capslock = 0x3A,
        sc_F1 = 0x3B,
        sc_F2 = 0x3C,
        sc_F3 = 0x3D,
        sc_F4 = 0x3E,
        sc_F5 = 0x3F,
        sc_F6 = 0x40,
        sc_F7 = 0x41,
        sc_F8 = 0x42,
        sc_F9 = 0x43,
        sc_F10 = 0x44,
        sc_F11 = 0x57,
        sc_F12 = 0x58,
        sc_up_arrow = 0x48,    // also maps to num keypad 8
        sc_left_arrow = 0x4B,  // also maps to num keypad 4
        sc_right_arrow = 0x4D, // also maps to num keypad 6
        sc_down_arrow = 0x50   // also maps to num keypad 2
    }
    class ScanCodes
    {
        public static ScanCode GetScanCode(Keys key)
        {
            return key switch
            {
                Keys.D0 => ScanCode.sc_0,
                Keys.D1 or Keys.D2 or Keys.D3 or Keys.D4 or Keys.D5 or Keys.D6 or Keys.D7 or Keys.D8 or Keys.D9 => ScanCode.sc_1 + (key - Keys.D1),
                Keys.A => ScanCode.sc_a,
                Keys.B => ScanCode.sc_b,
                Keys.C => ScanCode.sc_c,
                Keys.D => ScanCode.sc_d,
                Keys.E => ScanCode.sc_e,
                Keys.F => ScanCode.sc_f,
                Keys.G => ScanCode.sc_g,
                Keys.H => ScanCode.sc_h,
                Keys.I => ScanCode.sc_i,
                Keys.J => ScanCode.sc_j,
                Keys.K => ScanCode.sc_k,
                Keys.L => ScanCode.sc_l,
                Keys.M => ScanCode.sc_m,
                Keys.N => ScanCode.sc_n,
                Keys.O => ScanCode.sc_o,
                Keys.P => ScanCode.sc_p,
                Keys.Q => ScanCode.sc_q,
                Keys.R => ScanCode.sc_r,
                Keys.S => ScanCode.sc_s,
                Keys.T => ScanCode.sc_t,
                Keys.U => ScanCode.sc_u,
                Keys.V => ScanCode.sc_v,
                Keys.W => ScanCode.sc_w,
                Keys.X => ScanCode.sc_x,
                Keys.Y => ScanCode.sc_y,
                Keys.Z => ScanCode.sc_z,
                Keys.Return => ScanCode.sc_enter,
                Keys.Delete or Keys.Back => ScanCode.sc_backspace,
                Keys.Space => ScanCode.sc_space,
                Keys.Oemcomma => ScanCode.sc_comma,
                Keys.OemPeriod => ScanCode.sc_period,
                Keys.OemSemicolon => ScanCode.sc_semicolon,
                Keys.Escape => ScanCode.sc_escape,
                // back tick
                Keys.Oem3 => ScanCode.sc_grave,
                Keys.OemQuotes => ScanCode.sc_apostrophe,
                Keys.OemOpenBrackets => ScanCode.sc_bracketLeft,
                Keys.OemCloseBrackets => ScanCode.sc_bracketRight,
                Keys.OemMinus => ScanCode.sc_minus,
                Keys.Oemplus => ScanCode.sc_equals,
                Keys.Tab => ScanCode.sc_tab,
                Keys.Oem2 => ScanCode.sc_slash,
                Keys.Oem5 => ScanCode.sc_backslash,
                Keys.ShiftKey => ScanCode.sc_shiftLeft,
                Keys.Menu or Keys.Alt => ScanCode.sc_altLeft,
                Keys.ControlKey => ScanCode.sc_controlLeft,
                Keys.Up => ScanCode.sc_up_arrow,
                Keys.Down => ScanCode.sc_down_arrow,
                Keys.Left => ScanCode.sc_left_arrow,
                Keys.Right => ScanCode.sc_right_arrow,
                Keys.F1 or Keys.F2 or Keys.F3 or Keys.F4 or Keys.F5 or Keys.F6 or Keys.F7 or Keys.F8 or Keys.F9 or Keys.F10 => ScanCode.sc_F1 + (key - Keys.F1),
                Keys.F11 or Keys.F12 => ScanCode.sc_F11 + (key - Keys.F11),
                _ => ScanCode.sc_null,
            };
        }
    }

}
